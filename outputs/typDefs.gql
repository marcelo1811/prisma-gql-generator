type BiHour {
  ukey: Int!
  resource_name: String
  shift_name: String
  goal_availability: Float
  goal_energy: Float
  goal_o3e: Float
  goal_oee: Float
  goal_ole: Float
  goal_performance: Float
  goal_quality: Float
  goal_teep: Float
  goal_utilization: Float
  goal_working: Float
  realized_availability: Float
  realized_energy: Float
  realized_o3e: Float
  realized_oee: Float
  realized_ole: Float
  realized_performance: Float
  realized_quality: Float
  realized_teep: Float
  realized_utilization: Float
  realized_working: Float
  hour: Int
  week: Int
  duration: Int
  sync_ukey: Int
  resource_ukey: Int!
  resource: Resource
  shift_ukey: Int!
  shift: Shift
  datetime: Date
  previous_datetime: Date
  created_at: Date
  updated_at: Date
  updated_by: String
  need_create: Boolean
  need_update: Boolean
  need_delete: Boolean
  is_deleted: Boolean
}

input BiHourInput {
  ukey: Int
  resource_name: String
  shift_name: String
  goal_availability: Float
  goal_energy: Float
  goal_o3e: Float
  goal_oee: Float
  goal_ole: Float
  goal_performance: Float
  goal_quality: Float
  goal_teep: Float
  goal_utilization: Float
  goal_working: Float
  realized_availability: Float
  realized_energy: Float
  realized_o3e: Float
  realized_oee: Float
  realized_ole: Float
  realized_performance: Float
  realized_quality: Float
  realized_teep: Float
  realized_utilization: Float
  realized_working: Float
  hour: Int
  week: Int
  duration: Int
  sync_ukey: Int
  resource_ukey: Int
  shift_ukey: Int
  datetime: Date
  previous_datetime: Date
  created_at: Date
  updated_at: Date
  updated_by: String
  need_create: Boolean
  need_update: Boolean
  need_delete: Boolean
  is_deleted: Boolean
}

type BiMaintence {
  ukey: Int!
  resource_name: String
  shift_name: String
  goal_availability: Float
  goal_energy: Float
  goal_o3e: Float
  goal_oee: Float
  goal_ole: Float
  goal_performance: Float
  goal_quality: Float
  goal_teep: Float
  goal_utilization: Float
  goal_working: Float
  realized_availability: Float
  realized_energy: Float
  realized_o3e: Float
  realized_oee: Float
  realized_ole: Float
  realized_performance: Float
  realized_quality: Float
  realized_teep: Float
  realized_utilization: Float
  realized_working: Float
  hour: Int
  week: Int
  duration: Int
  sync_ukey: Int
  resource_ukey: Int!
  resource: Resource
  shift_ukey: Int!
  shift: Shift
  datetime: Date
  previous_datetime: Date
  created_at: Date!
  updated_at: Date!
  updated_by: String
  need_create: Boolean
  need_update: Boolean
  need_delete: Boolean
  is_deleted: Boolean
}

input BiMaintenceInput {
  ukey: Int
  resource_name: String
  shift_name: String
  goal_availability: Float
  goal_energy: Float
  goal_o3e: Float
  goal_oee: Float
  goal_ole: Float
  goal_performance: Float
  goal_quality: Float
  goal_teep: Float
  goal_utilization: Float
  goal_working: Float
  realized_availability: Float
  realized_energy: Float
  realized_o3e: Float
  realized_oee: Float
  realized_ole: Float
  realized_performance: Float
  realized_quality: Float
  realized_teep: Float
  realized_utilization: Float
  realized_working: Float
  hour: Int
  week: Int
  duration: Int
  sync_ukey: Int
  resource_ukey: Int
  shift_ukey: Int
  datetime: Date
  previous_datetime: Date
  created_at: Date
  updated_at: Date
  updated_by: String
  need_create: Boolean
  need_update: Boolean
  need_delete: Boolean
  is_deleted: Boolean
}

type BiShift {
  ukey: Int!
  resource_name: String
  shift_name: String
  goal_availability: Float
  goal_energy: Float
  goal_o3e: Float
  goal_oee: Float
  goal_ole: Float
  goal_performance: Float
  goal_quality: Float
  goal_teep: Float
  goal_utilization: Float
  goal_working: Float
  realized_availability: Float
  realized_energy: Float
  realized_o3e: Float
  realized_oee: Float
  realized_ole: Float
  realized_performance: Float
  realized_quality: Float
  realized_teep: Float
  realized_utilization: Float
  realized_working: Float
  hour: Int
  week: Int
  duration: Int
  sync_ukey: Int
  resource_ukey: Int!
  resource: Resource
  shift_ukey: Int!
  shift: Shift
  datetime: Date
  previous_datetime: Date
  created_at: Date!
  updated_at: Date!
  updated_by: String
  need_create: Boolean
  need_update: Boolean
  need_delete: Boolean
  is_deleted: Boolean
}

input BiShiftInput {
  ukey: Int
  resource_name: String
  shift_name: String
  goal_availability: Float
  goal_energy: Float
  goal_o3e: Float
  goal_oee: Float
  goal_ole: Float
  goal_performance: Float
  goal_quality: Float
  goal_teep: Float
  goal_utilization: Float
  goal_working: Float
  realized_availability: Float
  realized_energy: Float
  realized_o3e: Float
  realized_oee: Float
  realized_ole: Float
  realized_performance: Float
  realized_quality: Float
  realized_teep: Float
  realized_utilization: Float
  realized_working: Float
  hour: Int
  week: Int
  duration: Int
  sync_ukey: Int
  resource_ukey: Int
  shift_ukey: Int
  datetime: Date
  previous_datetime: Date
  created_at: Date
  updated_at: Date
  updated_by: String
  need_create: Boolean
  need_update: Boolean
  need_delete: Boolean
  is_deleted: Boolean
}

type Calendar {
  ukey: Int!
  name: String
  start_at: Date
  stop_at: Date
  sync_ukey: Int
  monitored_resource: [MonitoredResource]
  no_work_shift: [NoWorkShift]
  resource: [Resource]
  work_center: [WorkCenter]
  work_shift: [WorkShift]
  created_at: Date
  updated_at: Date
  updated_by: String
  need_create: Boolean
  need_update: Boolean
  need_delete: Boolean
  is_deleted: Boolean
}

input CalendarInput {
  ukey: Int
  name: String
  start_at: Date
  stop_at: Date
  sync_ukey: Int
  created_at: Date
  updated_at: Date
  updated_by: String
  need_create: Boolean
  need_update: Boolean
  need_delete: Boolean
  is_deleted: Boolean
}

type Company {
  ukey: Int!
  name: String
  country: String
  state: String
  city: String
  zip_code: String
  street: String
  number: String
  complement: String
  email: String
  name_contact: String
  register_type: Int
  register_number: Int
  timezone: Int
  sync_ukey: Int
  company_group_ukey: Int!
  company_group: CompanyGroup
  currency_ukey: Int!
  currency: Currency
  sector: [Sector]
  user: [User]
  created_at: Date
  updated_at: Date
  updated_by: String
  need_create: Boolean
  need_update: Boolean
  need_delete: Boolean
  is_deleted: Boolean
}

input CompanyInput {
  ukey: Int
  name: String
  country: String
  state: String
  city: String
  zip_code: String
  street: String
  number: String
  complement: String
  email: String
  name_contact: String
  register_type: Int
  register_number: Int
  timezone: Int
  sync_ukey: Int
  company_group_ukey: Int
  currency_ukey: Int
  created_at: Date
  updated_at: Date
  updated_by: String
  need_create: Boolean
  need_update: Boolean
  need_delete: Boolean
  is_deleted: Boolean
}

type CompanyGroup {
  ukey: Int!
  name: String
  sync_ukey: Int
  company: [Company]
  created_at: Date
  updated_at: Date
  updated_by: String
  need_create: Boolean
  need_update: Boolean
  need_delete: Boolean
  is_deleted: Boolean
}

input CompanyGroupInput {
  ukey: Int
  name: String
  sync_ukey: Int
  created_at: Date
  updated_at: Date
  updated_by: String
  need_create: Boolean
  need_update: Boolean
  need_delete: Boolean
  is_deleted: Boolean
}

type Currency {
  ukey: Int!
  name: String
  code: String
  symbol: String
  sync_ukey: Int
  company: [Company]
  monitored_resource: [MonitoredResource]
  created_at: Date
  updated_at: Date
  updated_by: String
  need_create: Boolean
  need_update: Boolean
  need_delete: Boolean
  is_deleted: Boolean
}

input CurrencyInput {
  ukey: Int
  name: String
  code: String
  symbol: String
  sync_ukey: Int
  created_at: Date
  updated_at: Date
  updated_by: String
  need_create: Boolean
  need_update: Boolean
  need_delete: Boolean
  is_deleted: Boolean
}

type MonitoredResource {
  ukey: Int!
  id_hardware_monitored: String
  name_machine: String
  status: Int
  goal_availability: Float
  goal_energy: Float
  goal_o3e: Float
  goal_oee: Float
  goal_ole: Float
  goal_performance: Float
  goal_quality: Float
  goal_teep: Float
  goal_utilization: Float
  goal_working: Float
  standard_availability: Float
  standard_energy: Float
  standard_speed: Float
  time_setup: Float
  sync_ukey: Int
  currency_ukey: Int!
  currency: Currency
  calendar_ukey: Int!
  calendar: Calendar
  resource_ukey: Int!
  resource: Resource
  created_at: Date
  updated_at: Date
  updated_by: String
  need_create: Boolean
  need_update: Boolean
  need_delete: Boolean
  is_deleted: Boolean
}

input MonitoredResourceInput {
  ukey: Int
  id_hardware_monitored: String
  name_machine: String
  status: Int
  goal_availability: Float
  goal_energy: Float
  goal_o3e: Float
  goal_oee: Float
  goal_ole: Float
  goal_performance: Float
  goal_quality: Float
  goal_teep: Float
  goal_utilization: Float
  goal_working: Float
  standard_availability: Float
  standard_energy: Float
  standard_speed: Float
  time_setup: Float
  sync_ukey: Int
  currency_ukey: Int
  calendar_ukey: Int
  resource_ukey: Int
  created_at: Date
  updated_at: Date
  updated_by: String
  need_create: Boolean
  need_update: Boolean
  need_delete: Boolean
  is_deleted: Boolean
}

type NoWorkShift {
  ukey: Int!
  start_at: Date!
  stop_at: Date!
  sync_ukey: Int
  calendar_ukey: Int!
  calendar: Calendar
  shift_ukey: Int!
  shift: Shift
  created_at: Date
  updated_at: Date
  updated_by: String
  need_create: Boolean
  need_update: Boolean
  need_delete: Boolean
  is_deleted: Boolean
}

input NoWorkShiftInput {
  ukey: Int
  start_at: Date
  stop_at: Date
  sync_ukey: Int
  calendar_ukey: Int
  shift_ukey: Int
  created_at: Date
  updated_at: Date
  updated_by: String
  need_create: Boolean
  need_update: Boolean
  need_delete: Boolean
  is_deleted: Boolean
}

type Operations {
  ukey: Int!
  code: String
  description: String
  sync_ukey: Int
  production_order: [ProductionOrder]
  created_at: Date
  updated_at: Date
  updated_by: String
  need_create: Boolean
  need_update: Boolean
  need_delete: Boolean
  is_deleted: Boolean
}

input OperationsInput {
  ukey: Int
  code: String
  description: String
  sync_ukey: Int
  created_at: Date
  updated_at: Date
  updated_by: String
  need_create: Boolean
  need_update: Boolean
  need_delete: Boolean
  is_deleted: Boolean
}

type Parameters {
  ukey: Int!
  type: String
  key: String!
  value: String
  sync_ukey: Int
  created_at: Date
  updated_at: Date
  updated_by: String
  need_create: Boolean
  need_update: Boolean
  need_delete: Boolean
  is_deleted: Boolean
}

input ParametersInput {
  ukey: Int
  type: String
  key: String
  value: String
  sync_ukey: Int
  created_at: Date
  updated_at: Date
  updated_by: String
  need_create: Boolean
  need_update: Boolean
  need_delete: Boolean
  is_deleted: Boolean
}

type PreventiveMaintenance {
  ukey: Int!
  stop_reason_description: String
  status: Int
  start_at: Date!
  stop_at: Date!
  sync_ukey: Int
  reason_ukey: Int!
  reason: Reason
  resource_ukey: Int!
  resource: Resource
  resource_stop: [ResourceStop]
  created_at: Date
  updated_at: Date
  updated_by: String
  need_create: Boolean
  need_update: Boolean
  need_delete: Boolean
  is_deleted: Boolean
}

input PreventiveMaintenanceInput {
  ukey: Int
  stop_reason_description: String
  status: Int
  start_at: Date
  stop_at: Date
  sync_ukey: Int
  reason_ukey: Int
  resource_ukey: Int
  created_at: Date
  updated_at: Date
  updated_by: String
  need_create: Boolean
  need_update: Boolean
  need_delete: Boolean
  is_deleted: Boolean
}

type ProductionOrder {
  ukey: Int!
  origin: Int
  status_order: Int
  type_refuse: Int
  code: String
  product: String
  planned_quantity: Float
  realized_quantity: Float
  open_quantity: Float
  planned_quantity_refuse: Float
  real_quantity_refuse: Float
  goal_availability: Float
  goal_energy: Float
  goal_o3e: Float
  goal_oee: Float
  goal_ole: Float
  goal_performance: Float
  goal_quality: Float
  goal_teep: Float
  goal_utilization: Float
  goal_working: Float
  standard_availability: Float
  standard_energy: Float
  standard_speed: Float
  time_setup: Float
  refuse_conversion: Float
  nonconforming_quantity: Float
  sync_ukey: Int
  operation_ukey: Int!
  operations: Operations
  resource_ukey: Int!
  resource: Resource
  unity_quantity_ukey: Int!
  unity_quantity: Unit
  unity_refuse_ukey: Int!
  unity_quantity_refuse: Unit
  work_center_ukey: Int!
  work_center: WorkCenter
  production_order_annotation: [ProductionOrderAnnotation]
  real_start: Date
  real_end: Date
  planned_start: Date!
  planned_end: Date!
  created_at: Date
  updated_at: Date
  updated_by: String
  need_create: Boolean
  need_update: Boolean
  need_delete: Boolean
  is_deleted: Boolean
}

input ProductionOrderInput {
  ukey: Int
  origin: Int
  status_order: Int
  type_refuse: Int
  code: String
  product: String
  planned_quantity: Float
  realized_quantity: Float
  open_quantity: Float
  planned_quantity_refuse: Float
  real_quantity_refuse: Float
  goal_availability: Float
  goal_energy: Float
  goal_o3e: Float
  goal_oee: Float
  goal_ole: Float
  goal_performance: Float
  goal_quality: Float
  goal_teep: Float
  goal_utilization: Float
  goal_working: Float
  standard_availability: Float
  standard_energy: Float
  standard_speed: Float
  time_setup: Float
  refuse_conversion: Float
  nonconforming_quantity: Float
  sync_ukey: Int
  operation_ukey: Int
  resource_ukey: Int
  unity_quantity_ukey: Int
  unity_refuse_ukey: Int
  work_center_ukey: Int
  real_start: Date
  real_end: Date
  planned_start: Date
  planned_end: Date
  created_at: Date
  updated_at: Date
  updated_by: String
  need_create: Boolean
  need_update: Boolean
  need_delete: Boolean
  is_deleted: Boolean
}

type ProductionOrderAnnotation {
  ukey: Int!
  quantity: Float
  quantity_refuse: Float
  origin: Int
  status_annotation: Int
  sync_ukey: Int
  production_order_ukey: Int!
  production_order: ProductionOrder
  resource_ukey: Int!
  resource: Resource
  shift_ukey: Int!
  shift: Shift
  created_at: Date
  updated_at: Date
  updated_by: String
  need_create: Boolean
  need_update: Boolean
  need_delete: Boolean
  is_deleted: Boolean
}

input ProductionOrderAnnotationInput {
  ukey: Int
  quantity: Float
  quantity_refuse: Float
  origin: Int
  status_annotation: Int
  sync_ukey: Int
  production_order_ukey: Int
  resource_ukey: Int
  shift_ukey: Int
  created_at: Date
  updated_at: Date
  updated_by: String
  need_create: Boolean
  need_update: Boolean
  need_delete: Boolean
  is_deleted: Boolean
}

type Reason {
  ukey: Int!
  name: String
  type_reason: Int
  is_produtive: Boolean
  is_utilization: Boolean
  is_preventive: Boolean
  sync_ukey: Int
  preventive_maintenance: [PreventiveMaintenance]
  resource_stop: [ResourceStop]
  created_at: Date
  updated_at: Date
  updated_by: String
  need_create: Boolean
  need_update: Boolean
  need_delete: Boolean
  is_deleted: Boolean
}

input ReasonInput {
  ukey: Int
  name: String
  type_reason: Int
  is_produtive: Boolean
  is_utilization: Boolean
  is_preventive: Boolean
  sync_ukey: Int
  created_at: Date
  updated_at: Date
  updated_by: String
  need_create: Boolean
  need_update: Boolean
  need_delete: Boolean
  is_deleted: Boolean
}

type Resource {
  ukey: Int!
  name: String
  id_monitor: Int
  logical_id_monitored: String
  hourly_cost_value: Float
  status: Int
  keep_alive: Date
  sync_ukey: Int
  calendar_ukey: Int!
  calendar: Calendar
  resource_type_ukey: Int!
  resource_type: ResourceType
  work_center_ukey: Int!
  work_center: WorkCenter
  resource_data: [ResourceData]
  bi_hour: [BiHour]
  bi_maintence: [BiMaintence]
  bi_shift: [BiShift]
  monitored_resource: [MonitoredResource]
  preventive_maintenance: [PreventiveMaintenance]
  production_order: [ProductionOrder]
  production_order_annotation: [ProductionOrderAnnotation]
  resource_stop: [ResourceStop]
  created_at: Date
  updated_at: Date
  updated_by: String
  need_create: Boolean
  need_update: Boolean
  need_delete: Boolean
  is_deleted: Boolean
}

input ResourceInput {
  ukey: Int
  name: String
  id_monitor: Int
  logical_id_monitored: String
  hourly_cost_value: Float
  status: Int
  keep_alive: Date
  sync_ukey: Int
  calendar_ukey: Int
  resource_type_ukey: Int
  work_center_ukey: Int
  created_at: Date
  updated_at: Date
  updated_by: String
  need_create: Boolean
  need_update: Boolean
  need_delete: Boolean
  is_deleted: Boolean
}

type ResourceData {
  ukey: Int!
  data0: Float
  data1: Float
  data2: Float
  data3: Float
  data4: Float
  resource_ukey: Int!
  resource: Resource
  captured_datetime: Date!
  created_at: Date
  updated_at: Date
  updated_by: String
}

input ResourceDataInput {
  ukey: Int
  data0: Float
  data1: Float
  data2: Float
  data3: Float
  data4: Float
  resource_ukey: Int
  captured_datetime: Date
  created_at: Date
  updated_at: Date
  updated_by: String
}

type ResourceStop {
  ukey: Int!
  start_at: Date!
  stop_at: Date
  sync_ukey: Int
  preventive_maintenance_ukey: Int
  preventive_maintenance: PreventiveMaintenance
  reason_ukey: Int
  reason: Reason
  resource_ukey: Int!
  resource: Resource
  shift_ukey: Int!
  shift: Shift
  created_at: Date
  updated_at: Date
  updated_by: String
  need_create: Boolean
  need_update: Boolean
  need_delete: Boolean
  is_deleted: Boolean
}

input ResourceStopInput {
  ukey: Int
  start_at: Date
  stop_at: Date
  sync_ukey: Int
  preventive_maintenance_ukey: Int
  reason_ukey: Int
  resource_ukey: Int
  shift_ukey: Int
  created_at: Date
  updated_at: Date
  updated_by: String
  need_create: Boolean
  need_update: Boolean
  need_delete: Boolean
  is_deleted: Boolean
}

type ResourceType {
  ukey: Int!
  name: String
  sync_ukey: Int
  resource: [Resource]
  created_at: Date
  updated_at: Date
  updated_by: String
  need_create: Boolean
  need_update: Boolean
  need_delete: Boolean
  is_deleted: Boolean
}

input ResourceTypeInput {
  ukey: Int
  name: String
  sync_ukey: Int
  created_at: Date
  updated_at: Date
  updated_by: String
  need_create: Boolean
  need_update: Boolean
  need_delete: Boolean
  is_deleted: Boolean
}

type Sector {
  ukey: Int!
  code: String
  name: String
  sync_ukey: Int
  company_ukey: Int!
  company: Company
  work_center: [WorkCenter]
  created_at: Date
  updated_at: Date
  updated_by: String
  need_create: Boolean
  need_update: Boolean
  need_delete: Boolean
  is_deleted: Boolean
}

input SectorInput {
  ukey: Int
  code: String
  name: String
  sync_ukey: Int
  company_ukey: Int
  created_at: Date
  updated_at: Date
  updated_by: String
  need_create: Boolean
  need_update: Boolean
  need_delete: Boolean
  is_deleted: Boolean
}

type Shift {
  ukey: Int!
  name: String
  sync_ukey: Int
  bi_hour: [BiHour]
  bi_maintence: [BiMaintence]
  bi_shift: [BiShift]
  no_work_shift: [NoWorkShift]
  production_order_annotation: [ProductionOrderAnnotation]
  resource_stop: [ResourceStop]
  work_shift: [WorkShift]
  created_at: Date
  updated_at: Date
  updated_by: String
  need_create: Boolean
  need_update: Boolean
  need_delete: Boolean
  is_deleted: Boolean
}

input ShiftInput {
  ukey: Int
  name: String
  sync_ukey: Int
  created_at: Date
  updated_at: Date
  updated_by: String
  need_create: Boolean
  need_update: Boolean
  need_delete: Boolean
  is_deleted: Boolean
}

type Unit {
  ukey: Int!
  initials: String
  description: String
  sync_ukey: Int
  production_order_production_order_unity_quantity_ukeyTounit: [ProductionOrder]
  production_order_production_order_unity_refuse_ukeyTounit: [ProductionOrder]
  created_at: Date
  updated_at: Date
  updated_by: String
  need_create: Boolean
  need_update: Boolean
  need_delete: Boolean
  is_deleted: Boolean
}

input UnitInput {
  ukey: Int
  initials: String
  description: String
  sync_ukey: Int
  created_at: Date
  updated_at: Date
  updated_by: String
  need_create: Boolean
  need_update: Boolean
  need_delete: Boolean
  is_deleted: Boolean
}

type User {
  ukey: Int!
  name: String
  email: String
  login: String
  password: String
  sync_ukey: Int
  company_ukey: Int!
  company: Company
  created_at: Date
  updated_at: Date
  updated_by: String
  need_create: Boolean
  need_update: Boolean
  need_delete: Boolean
  is_deleted: Boolean
}

input UserInput {
  ukey: Int
  name: String
  email: String
  login: String
  password: String
  sync_ukey: Int
  company_ukey: Int
  created_at: Date
  updated_at: Date
  updated_by: String
  need_create: Boolean
  need_update: Boolean
  need_delete: Boolean
  is_deleted: Boolean
}

type WorkCenter {
  ukey: Int!
  name: String
  goal_availability: Float
  goal_energy: Float
  goal_o3e: Float
  goal_oee: Float
  goal_ole: Float
  goal_performance: Float
  goal_quality: Float
  goal_teep: Float
  goal_utilization: Float
  goal_working: Float
  standard_availability: Float
  standard_energy: Float
  standard_speed: Float
  sync_ukey: Int
  calendar_ukey: Int!
  calendar: Calendar
  sector_ukey: Int!
  sector: Sector
  production_order: [ProductionOrder]
  resource: [Resource]
  created_at: Date
  updated_at: Date
  updated_by: String
  need_create: Boolean
  need_update: Boolean
  need_delete: Boolean
  is_deleted: Boolean
}

input WorkCenterInput {
  ukey: Int
  name: String
  goal_availability: Float
  goal_energy: Float
  goal_o3e: Float
  goal_oee: Float
  goal_ole: Float
  goal_performance: Float
  goal_quality: Float
  goal_teep: Float
  goal_utilization: Float
  goal_working: Float
  standard_availability: Float
  standard_energy: Float
  standard_speed: Float
  sync_ukey: Int
  calendar_ukey: Int
  sector_ukey: Int
  created_at: Date
  updated_at: Date
  updated_by: String
  need_create: Boolean
  need_update: Boolean
  need_delete: Boolean
  is_deleted: Boolean
}

type WorkShift {
  ukey: Int!
  day_week: Int!
  start_time: Date!
  end_time: Date!
  sync_ukey: Int
  calendar_ukey: Int!
  calendar: Calendar
  shift_ukey: Int!
  shift: Shift
  created_at: Date
  updated_at: Date
  updated_by: String
  need_create: Boolean
  need_update: Boolean
  need_delete: Boolean
  is_deleted: Boolean
}

input WorkShiftInput {
  ukey: Int
  day_week: Int
  start_time: Date
  end_time: Date
  sync_ukey: Int
  calendar_ukey: Int
  shift_ukey: Int
  created_at: Date
  updated_at: Date
  updated_by: String
  need_create: Boolean
  need_update: Boolean
  need_delete: Boolean
  is_deleted: Boolean
}