type BiHour {
  ukey: Int!
  resource_name: String!
  shift_name: String!
  goal_availability: Float!
  goal_energy: Float!
  goal_o3e: Float!
  goal_oee: Float!
  goal_ole: Float!
  goal_performance: Float!
  goal_quality: Float!
  goal_teep: Float!
  goal_utilization: Float!
  goal_working: Float!
  realized_availability: Float!
  realized_energy: Float!
  realized_o3e: Float!
  realized_oee: Float!
  realized_ole: Float!
  realized_performance: Float!
  realized_quality: Float!
  realized_teep: Float!
  realized_utilization: Float!
  realized_working: Float!
  hour: Int!
  week: Int!
  sync_ukey: Int
  resource_ukey: Int!
  resource: Resource!
  shift_ukey: Int!
  shift: Shift!
  created_at: DateTime!
  updated_at: DateTime!
  updated_by: String!
  need_create: Boolean!
  need_update: Boolean!
  need_delete: Boolean!
}

type BiMaintence {
  ukey: Int!
  resource_name: String!
  shift_name: String!
  goal_availability: Float!
  goal_energy: Float!
  goal_o3e: Float!
  goal_oee: Float!
  goal_ole: Float!
  goal_performance: Float!
  goal_quality: Float!
  goal_teep: Float!
  goal_utilization: Float!
  goal_working: Float!
  realized_availability: Float!
  realized_energy: Float!
  realized_o3e: Float!
  realized_oee: Float!
  realized_ole: Float!
  realized_performance: Float!
  realized_quality: Float!
  realized_teep: Float!
  realized_utilization: Float!
  realized_working: Float!
  hour: Int!
  week: Int!
  sync_ukey: Int
  resource_ukey: Int!
  resource: Resource!
  shift_ukey: Int!
  shift: Shift!
  created_at: DateTime!
  updated_at: DateTime!
  updated_by: String!
  need_create: Boolean!
  need_update: Boolean!
  need_delete: Boolean!
}

type Calendar {
  ukey: Int!
  name: String!
  start_at: DateTime!
  stop_at: DateTime!
  sync_ukey: Int
  no_work_shift: NoWorkShift[]!
  resource: Resource[]!
  work_center: WorkCenter[]!
  work_shift: WorkShift[]!
  monitored_resource: MonitoredResource[]!
  created_at: DateTime!
  updated_at: DateTime!
  updated_by: String!
  need_create: Boolean!
  need_update: Boolean!
  need_delete: Boolean!
}

type BiShift {
  ukey: Int!
  resource_name: String!
  shift_name: String!
  goal_availability: Float!
  goal_energy: Float!
  goal_o3e: Float!
  goal_oee: Float!
  goal_ole: Float!
  goal_performance: Float!
  goal_quality: Float!
  goal_teep: Float!
  goal_utilization: Float!
  goal_working: Float!
  realized_availability: Float!
  realized_energy: Float!
  realized_o3e: Float!
  realized_oee: Float!
  realized_ole: Float!
  realized_performance: Float!
  realized_quality: Float!
  realized_teep: Float!
  realized_utilization: Float!
  realized_working: Float!
  hour: Int!
  week: Int!
  sync_ukey: Int
  resource_ukey: Int!
  resource: Resource!
  shift_ukey: Int!
  shift: Shift!
  created_at: DateTime!
  updated_at: DateTime!
  updated_by: String!
  need_create: Boolean!
  need_update: Boolean!
  need_delete: Boolean!
}

type Company {
  ukey: Int!
  name: String!
  country: String!
  state: String!
  city: String!
  zip_code: String!
  street: String!
  number: String!
  complement: String!
  email: String!
  name_contact: String!
  register_type: String!
  register_number: String!
  timezone: Int!
  sync_ukey: Int
  company_group_ukey: Int!
  company_group: CompanyGroup!
  currency_ukey: Int!
  currency: Currency!
  sector: Sector[]!
  users: Users[]!
  created_at: DateTime!
  updated_at: DateTime!
  updated_by: String!
  need_create: Boolean!
  need_update: Boolean!
  need_delete: Boolean!
}

type CompanyGroup {
  ukey: Int!
  name: String!
  sync_ukey: Int
  company: Company[]!
  created_at: DateTime!
  updated_at: DateTime!
  updated_by: String!
  need_create: Boolean!
  need_update: Boolean!
  need_delete: Boolean!
}

type Currency {
  ukey: Int!
  name: String!
  code: String!
  symbol: String!
  sync_ukey: Int
  company: Company[]!
  monitored_resource: MonitoredResource[]!
  created_at: DateTime!
  updated_at: DateTime!
  updated_by: String!
  need_create: Boolean!
  need_update: Boolean!
  need_delete: Boolean!
}

type MonitoredResource {
  ukey: Int!
  id_hardware_monitored: String!
  name_machine: String!
  status: Int!
  goal_availability: Float!
  goal_energy: Float!
  goal_o3e: Float!
  goal_oee: Float!
  goal_ole: Float!
  goal_performance: Float!
  goal_quality: Float!
  goal_teep: Float!
  goal_utilization: Float!
  goal_working: Float!
  standard_availability: Float!
  standard_energy: Float!
  standard_speed: Float!
  time_setup: Float!
  sync_ukey: Int
  currency_ukey: Int!
  currency: Currency!
  calendar_ukey: Int!
  calendar: Calendar!
  resource_ukey: Int!
  resource: Resource!
  created_at: DateTime!
  updated_at: DateTime!
  updated_by: String!
  need_create: Boolean!
  need_update: Boolean!
  need_delete: Boolean!
}

type NoWorkShift {
  ukey: Int!
  start_at: DateTime!
  stop_at: DateTime!
  sync_ukey: Int
  calendar_ukey: Int!
  calendar: Calendar!
  shift_ukey: Int!
  shift: Shift!
  created_at: DateTime!
  updated_at: DateTime!
  updated_by: String!
  need_create: Boolean!
  need_update: Boolean!
  need_delete: Boolean!
}

type Operations {
  ukey: Int!
  code: String!
  description: String!
  sync_ukey: Int
  production_order: ProductionOrder[]!
  created_at: DateTime!
  updated_at: DateTime!
  updated_by: String!
  need_create: Boolean!
  need_update: Boolean!
  need_delete: Boolean!
}

type Parameters {
  ukey: Int!
  type: String!
  key: String!
  value: String!
  sync_ukey: Int
  created_at: DateTime!
  updated_at: DateTime!
  updated_by: String!
  need_create: Boolean!
  need_update: Boolean!
  need_delete: Boolean!
}

type PreventMaintence {
  ukey: Int!
  stop_reason_description: String!
  status: Int!
  is_deleted: Boolean!
  start_at: DateTime!
  stop_at: DateTime!
  sync_ukey: Int
  reason_ukey: Int!
  reason: Reason!
  resource_ukey: Int!
  resource: Resource!
  resource_stop: ResourceStop[]!
  created_at: DateTime!
  updated_at: DateTime!
  updated_by: String!
  need_create: Boolean!
  need_update: Boolean!
  need_delete: Boolean!
}

type ProductionOrder {
  ukey: Int!
  origin: Int!
  status_order: Int!
  type_refuse: Int!
  code: String!
  product: String!
  planned_quantity: Float!
  realized_quantity: Float!
  open_quantity: Float!
  planned_quantity_refuse: Float!
  real_quantity_refuse: Float!
  goal_availability: Float!
  goal_energy: Float!
  goal_o3e: Float!
  goal_oee: Float!
  goal_ole: Float!
  goal_performance: Float!
  goal_quality: Float!
  goal_teep: Float!
  goal_utilization: Float!
  goal_working: Float!
  standard_availability: Float!
  standard_energy: Float!
  standard_speed: Float!
  time_setup: Float!
  refuse_conversion: Float!
  nonconforming_quantity: Float!
  sync_ukey: Int
  operation_ukey: Int!
  operations: Operations!
  resource_ukey: Int!
  resource: Resource!
  unity_quantity_ukey: Int!
  unity_quantity: Units!
  unity_refuse_ukey: Int!
  unity_quantity_refuse: Units!
  work_center_ukey: Int!
  work_center: WorkCenter!
  production_order_annotation: ProductionOrderAnnotation[]!
  datetime_real_start: DateTime!
  datetime_real_end: DateTime!
  datetime_planned_end: DateTime!
  datetime_planned_start: DateTime!
  created_at: DateTime!
  updated_at: DateTime!
  updated_by: String!
  need_create: Boolean!
  need_update: Boolean!
  need_delete: Boolean!
}

type ProductionOrderAnnotation {
  ukey: Int!
  quantity: Float!
  quantity_refuse: Float!
  origin: Int!
  status_annotation: Int!
  sync_ukey: Int
  production_order_ukey: Int!
  production_order: ProductionOrder!
  resource_ukey: Int!
  resource: Resource!
  shift_ukey: Int!
  shift: Shift!
  created_at: DateTime!
  updated_at: DateTime!
  updated_by: String!
  need_create: Boolean!
  need_update: Boolean!
  need_delete: Boolean!
}

type Reason {
  ukey: Int!
  name: String!
  type_reason: Int!
  is_produtive: Boolean!
  is_utilization: Boolean!
  is_preventive: Boolean!
  sync_ukey: Int
  prevent_maintence: PreventMaintence[]!
  resource_stop: ResourceStop[]!
  created_at: DateTime!
  updated_at: DateTime!
  updated_by: String!
  need_create: Boolean!
  need_update: Boolean!
  need_delete: Boolean!
}

type Resource {
  ukey: Int!
  name: String!
  id_monitor: Int!
  logical_id_monitored: String!
  hourly_cost_value: Float!
  status: Int!
  keepAlive: DateTime!
  sync_ukey: Int
  calendar_ukey: Int!
  calendar: Calendar!
  resource_type_ukey: Int!
  resource_type: ResourceType!
  resource_data: ResourceData[]!
  bi_hour: BiHour[]!
  bi_maintence: BiMaintence[]!
  monitored_resource: MonitoredResource[]!
  prevent_maintence: PreventMaintence[]!
  production_order: ProductionOrder[]!
  production_order_annotation: ProductionOrderAnnotation[]!
  resource_stop: ResourceStop[]!
  bi_shift: BiShift[]!
  work_center: WorkCenter[]!
  created_at: DateTime!
  updated_at: DateTime!
  updated_by: String!
  need_create: Boolean!
  need_update: Boolean!
  need_delete: Boolean!
}

type ResourceData {
  ukey: Int!
  data0: Float!
  data1: Float!
  data2: Float!
  data3: Float!
  data4: Float!
  typedata: String!
  group: String!
  resource_ukey: Int!
  resource: Resource!
  captured_datetime: DateTime!
  created_at: DateTime!
  updated_at: DateTime!
  updated_by: String!
}

type ResourceStop {
  ukey: Int!
  start_at: DateTime!
  stop_at: DateTime!
  sync_ukey: Int
  prevent_maintence_ukey: Int!
  prevent_maintence: PreventMaintence!
  reason_ukey: Int!
  reason: Reason!
  resource_ukey: Int!
  resource: Resource!
  shift_ukey: Int!
  shift: Shift!
  created_at: DateTime!
  updated_at: DateTime!
  updated_by: String!
  need_create: Boolean!
  need_update: Boolean!
  need_delete: Boolean!
}

type ResourceType {
  ukey: Int!
  name: String!
  sync_ukey: Int
  resource: Resource[]!
  created_at: DateTime!
  updated_at: DateTime!
  updated_by: String!
  need_create: Boolean!
  need_update: Boolean!
  need_delete: Boolean!
}

type Sector {
  ukey: Int!
  code: String!
  name: String!
  sync_ukey: Int
  company_ukey: Int!
  company: Company!
  work_center: WorkCenter[]!
  created_at: DateTime!
  updated_at: DateTime!
  updated_by: String!
  need_create: Boolean!
  need_update: Boolean!
  need_delete: Boolean!
}

type Shift {
  ukey: Int!
  name: String!
  sync_ukey: Int
  bi_hour: BiHour[]!
  bi_maintence: BiMaintence[]!
  no_work_shift: NoWorkShift[]!
  production_order_annotation: ProductionOrderAnnotation[]!
  resource_stop: ResourceStop[]!
  bi_shift: BiShift[]!
  work_shift: WorkShift[]!
  created_at: DateTime!
  updated_at: DateTime!
  updated_by: String!
  need_create: Boolean!
  need_update: Boolean!
  need_delete: Boolean!
}

type Units {
  ukey: Int!
  initials: String!
  description: String!
  sync_ukey: Int
  production_order_production_order_unity_quantity_ukeyTounits: ProductionOrder[]!
  production_order_production_order_unity_refuse_ukeyTounits: ProductionOrder[]!
  created_at: DateTime!
  updated_at: DateTime!
  updated_by: String!
  need_create: Boolean!
  need_update: Boolean!
  need_delete: Boolean!
}

type Users {
  ukey: Int!
  name: String!
  email: String!
  login: String!
  password: String!
  sync_ukey: Int
  company_ukey: Int!
  company: Company!
  created_at: DateTime!
  updated_at: DateTime!
  updated_by: String!
  need_create: Boolean!
  need_update: Boolean!
  need_delete: Boolean!
}

type WorkCenter {
  ukey: Int!
  name: String!
  goal_availability: Float!
  goal_energy: Float!
  goal_o3e: Float!
  goal_oee: Float!
  goal_ole: Float!
  goal_performance: Float!
  goal_quality: Float!
  goal_teep: Float!
  goal_utilization: Float!
  goal_working: Float!
  standard_availability: Float!
  standard_energy: Float!
  standard_speed: Float!
  sync_ukey: Int
  calendar_ukey: Int!
  calendar: Calendar!
  resource_ukey: Int!
  resource: Resource!
  sector_ukey: Int!
  sector: Sector!
  production_order: ProductionOrder[]!
  created_at: DateTime!
  updated_at: DateTime!
  updated_by: String!
  need_create: Boolean!
  need_update: Boolean!
  need_delete: Boolean!
}

type WorkShift {
  ukey: Int!
  day_week: Int!
  day_start_minutes: Int!
  day_end_minutes: Int!
  sync_ukey: Int
  calendar_ukey: Int!
  calendar: Calendar!
  shift_ukey: Int!
  shift: Shift!
  created_at: DateTime!
  updated_at: DateTime!
  updated_by: String!
  need_create: Boolean!
  need_update: Boolean!
  need_delete: Boolean!
}